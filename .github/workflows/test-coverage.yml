name: Test and Coverage

on:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements*.txt'
      - '.github/workflows/test-coverage.yml'
      - 'pyproject.toml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements*.txt'
      - '.github/workflows/test-coverage.yml'
      - 'pyproject.toml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Run tests with coverage
      run: |
        pytest --cov=lintro --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
    
    - name: Generate HTML coverage report
      run: |
        pytest --cov=lintro --cov-report=html
    
    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/
        retention-days: 14

  coverage-badge:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13.4'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
        pip install coverage-badge
    
    - name: Run tests with coverage
      run: |
        pytest --cov=lintro --cov-report=xml --cov-report=term
    
    - name: Generate coverage badge
      run: |
        coverage-badge -o coverage-badge.svg -f
    
    - name: Commit and push badge if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add coverage-badge.svg
        git diff --quiet && git diff --staged --quiet || git commit -m "docs: update coverage badge"
        git push 