---
name: CI Pipeline

'on':
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  docker-lintro-analysis:
    name: üõ†Ô∏è Docker Lintro Code Quality & Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install all tools and dependencies
        run: ./scripts/install-tools.sh --local

      - name: Install Python dependencies
        run: uv sync --dev

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: py-lintro:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Lintro Analysis in Docker
        run: ./scripts/ci-lintro.sh
        continue-on-error: true

      - name: Delete Previous Lintro PR Comments
        if: github.event_name == 'pull_request'
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

        # yamllint disable
        run: uv run python scripts/delete-previous-lintro-comments.py "<!-- lintro-report -->"
        # yamllint enable

      - name: Generate PR Comment
        if: github.event_name == 'pull_request'
        run: ./scripts/ci-pr-comment.sh

      - name: Comment PR with Lintro Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('pr-comment.txt', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Fail on Linting Issues
        if: env.CHK_EXIT_CODE != '0'
        run: |
          echo "‚ùå Linting checks failed with exit code $CHK_EXIT_CODE"
          echo "Please fix the issues identified by lintro and try again."
          exit $CHK_EXIT_CODE
