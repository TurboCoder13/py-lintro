---
name: Test Suite & Coverage

'on':
  push:
    branches: [main]
    paths:
      - '**.py'
      - pyproject.toml
      - .github/workflows/test-and-coverage.yml
      - scripts/local/run-tests.sh
      - scripts/docker/docker-test.sh
      - Dockerfile
      - docker-compose.yml
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  run-test-suite:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-22.04
    timeout-minutes: 45
    concurrency:
      group: tests-${{ github.ref }}
      cancel-in-progress: true
    defaults:
      run:
        shell: bash
    if: >-
      github.event_name != 'pull_request' ||
      github.event.pull_request.draft == false
    env:
      LINTRO_OUTPUT_DIR: /tmp/lintro
    outputs:
      coverage-percentage: ${{ steps.coverage.outputs.percentage }}
    steps:
      - name: Harden and Checkout
        uses: TurboCoder13/py-lintro/.github/actions/harden-and-checkout@5d38d622f2f61f6646c3918cd8ea4e53d0020295
      - name: Environment setup
        uses: TurboCoder13/py-lintro/.github/actions/setup-env@5d38d622f2f61f6646c3918cd8ea4e53d0020295
      - name: Run comprehensive test suite (with Docker tests)
        run: ./scripts/local/run-tests.sh
      - name: Upload coverage to Codecov (pinned, via script)
        # Why not use codecov/codecov-action?
        # - Our workflows enforce an allow-list and require all actions (including
        #   transitive ones) to be pinned to full-length SHAs.
        # - The Codecov action internally references other actions (e.g. actions/github-script)
        #   via tags, which violates the policy and causes the job to be blocked at
        #   "Set up job".
        # - Instead, we use GitHub CLI to download a pinned Codecov uploader release
        #   asset and verify its checksum (curl-free), which complies with our
        #   hardened policy.
        #
        # Configuration:
        # - CODECOV_VERSION pins the uploader release version.
        # - Prefer providing CODECOV_SHA256 to hard-pin the checksum; otherwise this
        #   script downloads the official checksum asset (CODECOV_CHECKSUM_ASSET) and
        #   verifies the binary before upload.
        env:
          CODECOV_VERSION: v0.7.7
          CODECOV_FLAGS: python-3.13
          CODECOV_FILES: ./coverage.xml
          CODECOV_ASSET: codecov-linux
          CODECOV_CHECKSUM_ASSET: codecov-linux.sha256
        run: ./scripts/ci/codecov-upload.sh
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: coverage-report-python-3.13
          path: htmlcov/
          retention-days: 30
      - name: Upload coverage XML as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: coverage-xml
          path: coverage.xml
          retention-days: 30
      - name: Upload .coverage as artifact (if present)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: ${{ hashFiles('.coverage') != '' }}
        with:
          name: coverage-dotfile
          path: .coverage
          retention-days: 30
      - name: Extract coverage percentage
        id: coverage
        run: ./scripts/ci/ci-extract-coverage.sh

      - name: Enforce coverage threshold (80%)
        if: github.ref == 'refs/heads/main' && success()
        env:
          COVERAGE_PERCENTAGE: ${{ steps.coverage.outputs.percentage }}
        run: bash ./scripts/ci/enforce-coverage-threshold.sh

      - name: Generate coverage badge artifact only (no commit)
        if: github.ref == 'refs/heads/main' && success()
        run: ./scripts/ci/coverage-badge-update.sh

  comment-pr-coverage:
    needs: run-test-suite
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    permissions:
      contents: read
      pull-requests: write
      issues: write
    if: >-
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false
    steps:
      - name: Harden and Checkout
        uses: TurboCoder13/py-lintro/.github/actions/harden-and-checkout@5d38d622f2f61f6646c3918cd8ea4e53d0020295
      - name: Environment setup
        uses: TurboCoder13/py-lintro/.github/actions/setup-env@5d38d622f2f61f6646c3918cd8ea4e53d0020295
      - name: Delete Previous Coverage PR Comments
        uses: TurboCoder13/py-lintro/.github/actions/post-pr-comment@5d38d622f2f61f6646c3918cd8ea4e53d0020295
        with:
          file: coverage-pr-comment.txt
          marker: '<!-- coverage-report -->'

      - name: Generate coverage PR comment
        run: |
          export COVERAGE_PERCENTAGE="${{ needs.run-test-suite.outputs.coverage-percentage }}"
          ./scripts/ci/coverage-pr-comment.sh
        # yamllint enable
      - name: Comment PR with coverage info
        uses: TurboCoder13/py-lintro/.github/actions/post-pr-comment@5d38d622f2f61f6646c3918cd8ea4e53d0020295
        with:
          file: coverage-pr-comment.txt
          marker: '<!-- coverage-report -->'
