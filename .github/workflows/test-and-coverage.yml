---
name: Testing - Full Suite & Coverage
# Executes comprehensive test suite in Docker, generates coverage reports,
# uploads artifacts, and posts coverage information to PRs.

'on':
  push:
    branches: [main]
    paths:
      - '**.py'
      - pyproject.toml
      - .github/workflows/test-and-coverage.yml
      - scripts/local/run-tests.sh
      - scripts/docker/docker-test.sh
      - Dockerfile
      - docker-compose.yml
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  run-test-suite:
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    timeout-minutes: 45
    concurrency:
      group: tests-${{ github.ref }}
      cancel-in-progress: true
    defaults:
      run:
        shell: bash
    if: >-
      github.event_name != 'pull_request' ||
      github.event.pull_request.draft == false
    env:
      LINTRO_OUTPUT_DIR: /tmp/lintro
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      coverage-percentage: ${{ steps.coverage.outputs.percentage }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            codeload.github.com:443
            downloads.github.com:443
            release-assets.githubusercontent.com:443
            objects.githubusercontent.com:443
            img.shields.io:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
            docker.io:443
            registry-1.docker.io:443
            auth.docker.io:443
            production.cloudflare.docker.com:443
            pypi.org:443
            files.pythonhosted.org:443
            codecov.io:443
            uploader.codecov.io:443
            storage.googleapis.com:443
            pings.codecov.com:443
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Environment setup
        uses: TurboCoder13/py-lintro/.github/actions/setup-env@e0f7754e7bd5205ae3e8794e153b4eb10dba2de1
      - name: Run comprehensive test suite (with Docker tests)
        run: ./scripts/docker/docker-test.sh
      # (moved) Upload coverage badge artifact happens after badge generation below
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: coverage-report-python-3.13
          path: htmlcov/
          retention-days: 30
      - name: Upload coverage XML as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: coverage-xml
          path: coverage.xml
          retention-days: 30
      - name: Upload .coverage as artifact (if present)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: ${{ hashFiles('.coverage') != '' }}
        with:
          name: coverage-dotfile
          path: .coverage
          retention-days: 30
      - name: Extract coverage percentage
        id: coverage
        run: ./scripts/ci/ci-extract-coverage.sh

      - name: Enforce coverage threshold (80%)
        if: github.ref == 'refs/heads/main' && success()
        env:
          COVERAGE_PERCENTAGE: ${{ steps.coverage.outputs.percentage }}
        run: bash ./scripts/ci/enforce-coverage-threshold.sh

      - name: Upload coverage to Codecov (always)
        if: always()
        continue-on-error: true
        # Pin Codecov action to commit SHA containing pinned github-script usage
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
        with:
          files: coverage.xml
          flags: python-3.13
          fail_ci_if_error: false

      - name: Generate coverage badge (no commit)
        if: success()
        env:
          COVERAGE_PERCENTAGE: ${{ steps.coverage.outputs.percentage }}
        run: ./scripts/ci/coverage-badge-update.sh

      - name: Upload coverage badge artifact
        if: success()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: coverage-badge
          path: assets/images/coverage-badge.svg

  comment-pr-coverage:
    needs: run-test-suite
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    if: always() && github.event_name == 'pull_request' && github.event.pull_request.draft == false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            codeload.github.com:443
            downloads.github.com:443
            release-assets.githubusercontent.com:443
            objects.githubusercontent.com:443
            img.shields.io:443
            pings.codecov.com:443
            codecov.io:443
            uploader.codecov.io:443
            storage.googleapis.com:443
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Environment setup
        uses: TurboCoder13/py-lintro/.github/actions/setup-env@e0f7754e7bd5205ae3e8794e153b4eb10dba2de1
      - name: Download coverage XML artifact (fallback for comment generation)
        if: always()
        continue-on-error: true
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: coverage-xml
          path: .
      - name: Generate coverage PR comment (always)
        if: always()
        env:
          COVERAGE_PERCENTAGE: ${{ needs.run-test-suite.outputs.coverage-percentage }}
          JOB_RESULT: ${{ needs.run-test-suite.result }}
        run: |
          export COVERAGE_PERCENTAGE
          export JOB_RESULT
          ./scripts/ci/coverage-pr-comment.sh
        # yamllint enable
      - name: Comment PR with coverage info
        uses: TurboCoder13/py-lintro/.github/actions/post-pr-comment@e0f7754e7bd5205ae3e8794e153b4eb10dba2de1
        with:
          file: coverage-pr-comment.txt
          marker: '<!-- coverage-report -->'
