---
name: Auto Tag on Main

'on':
  push:
    branches: [main]
    paths:
      - pyproject.toml

permissions:
  contents: write

jobs:
  auto-tag:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    # Only run when version actually changed
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Read version from pyproject.toml
        id: version
        run: scripts/ci/auto-tag-read-version.sh

      - name: Detect previous version
        id: prev
        run: scripts/ci/auto-tag-detect-previous.sh

      - name: Skip if version unchanged
        if: steps.prev.outputs.version == steps.version.outputs.version
        run: echo "Version unchanged; skipping tag creation."

      - name: Check if tag exists
        id: check
        if: steps.prev.outputs.version != steps.version.outputs.version
        run: |
          TAG="${{ steps.version.outputs.version }}"
          echo "Checking for tag $TAG"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create and push tag
        if: >-
          steps.prev.outputs.version != steps.version.outputs.version &&
          steps.check.outputs.exists == 'false'
        env:
          TAG: ${{ steps.version.outputs.version }}
        run: scripts/ci/auto-tag-create-push-tag.sh
