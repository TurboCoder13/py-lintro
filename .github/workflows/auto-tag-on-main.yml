---
name: Auto Tag on Main

'on':
  push:
    branches: [main]
    paths:
      - pyproject.toml
    # Only when last commit message indicates a release bump
    # This avoids random tagging on pyproject edits
    # GitHub does not support commit message filters here; enforce in a guard step

permissions:
  contents: read

jobs:
  auto-tag:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    timeout-minutes: 10
    # Only run when version actually changed
    steps:
      - name: Harden and Checkout
        uses: TurboCoder13/py-lintro/.github/actions/harden-and-checkout@5d38d622f2f61f6646c3918cd8ea4e53d0020295
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Guard ensure last commit is a release bump
        id: guard
        run: bash scripts/ci/guard-release-commit.sh

      - name: Skip if not a release bump commit
        if: steps.guard.outputs.ok != 'true'
        run: echo "Not a release bump commit; skipping tag creation."

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: 3.13

      - name: Install uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6
        with:
          enable-cache: true

      - name: Read version from pyproject.toml
        id: version
        run: scripts/ci/auto-tag-read-version.sh

      - name: Detect previous version
        id: prev
        run: scripts/ci/auto-tag-detect-previous.sh

      - name: Skip if version unchanged
        if: steps.prev.outputs.version == steps.version.outputs.version
        run: echo "Version unchanged; skipping tag creation."

      - name: Check if tag exists
        id: check
        if: steps.prev.outputs.version != steps.version.outputs.version
        run: |
          TAG="v${{ steps.version.outputs.version }}"
          echo "Checking for tag $TAG"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create and push tag
        if: >-
          steps.prev.outputs.version != steps.version.outputs.version &&
          steps.check.outputs.exists == 'false'
        env:
          TAG: v${{ steps.version.outputs.version }}
        run: scripts/ci/auto-tag-create-push-tag.sh
