---
name: Publish to PyPI on Tag

'on':
  push:
    tags:
      - '[0-9]+\.[0-9]+\.[0-9]+'
      - '[0-9]+\.[0-9]+\.[0-9]+a[0-9]+'
      - '[0-9]+\.[0-9]+\.[0-9]+b[0-9]+'
      - '[0-9]+\.[0-9]+\.[0-9]+rc[0-9]+'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  quality:
    uses: ./.github/workflows/reusable-quality.yml

  build:
    needs: quality
    uses: ./.github/workflows/reusable-build.yml

  publish:
    name: Upload to PyPI
    needs: [build, quality]
    runs-on: ubuntu-latest
    environment: pypi
    concurrency:
      group: pypi-tag-publish-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure tag commit is on main
        run: |
          git fetch --no-tags origin main:refs/remotes/origin/main
          if git merge-base --is-ancestor "$GITHUB_SHA" origin/main; then
            echo "Tag commit is on main"
          else
            echo "Tag commit is not on main; aborting publish" >&2
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Verify tag matches pyproject version
        run: |
          python - <<'PY'
          import os
          import tomllib
          with open('pyproject.toml', 'rb') as fh:
              data = tomllib.load(fh)
          version = data['project']['version']
          tag = os.environ['GITHUB_REF_NAME']
          print(f"pyproject version: {version} / tag: {tag}")
          if version != tag:
              raise SystemExit(1)
          PY

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          skip-existing: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: v${{ github.ref_name }}
          generate_release_notes: true
          files: |
            dist/*
