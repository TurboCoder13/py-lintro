---
name: Publish to PyPI on Tag

'on':
  push:
    tags:
      - '*.*.*'
      - v*.*.*
      - '*.*.*a*'
      - v*.*.*a*
      - '*.*.*b*'
      - v*.*.*b*
      - '*.*.*rc*'
      - v*.*.*rc*
  workflow_dispatch:

permissions:
  contents: read

jobs:
  quality:
    uses: TurboCoder13/py-lintro/.github/workflows/reusable-quality.yml@5d38d622f2f61f6646c3918cd8ea4e53d0020295
    permissions:
      contents: read

  build:
    needs: quality
    uses: TurboCoder13/py-lintro/.github/workflows/reusable-build.yml@5d38d622f2f61f6646c3918cd8ea4e53d0020295
    permissions:
      contents: read

  publish:
    name: Upload to PyPI
    needs: [build, quality]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
    timeout-minutes: 20
    environment: pypi
    concurrency:
      group: pypi-tag-publish-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Harden and Checkout
        uses: TurboCoder13/py-lintro/.github/actions/harden-and-checkout@5d38d622f2f61f6646c3918cd8ea4e53d0020295
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: 3.13

      - name: Install uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6
        with:
          enable-cache: true

      - name: Sync dependencies (dev)
        run: uv sync --dev --no-progress
      - name: Ensure tag points to a commit on main
        run: bash scripts/ci/ensure-tag-on-main.sh

      - name: Verify tag matches pyproject version
        run: |
          ver_line=$(uv run python scripts/utils/extract-version.py)
          echo "$ver_line"
          version=${ver_line#version=}
          tag="$GITHUB_REF_NAME"
          tag_stripped="${tag#v}"
          echo "pyproject version: $version / tag: $tag (stripped: $tag_stripped)"
          test "$version" = "$tag_stripped"
        # yamllint enable

      - name: Build sdist and wheel
        run: uv run python -m build

      - name: Twine check
        run: uv run python -m twine check dist/*

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          skip-existing: true
          verify-metadata: false

      - name: Create GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          tag_name: ${{ github.ref_name }}
          name: v${{ github.ref_name }}
          generate_release_notes: true
          files: |
            dist/*
