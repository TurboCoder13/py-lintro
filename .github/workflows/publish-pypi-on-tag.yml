# SPDX-License-Identifier: MIT
# For license details, see the repository root LICENSE file.
---
name: Publish to PyPI on Tag

'on':
  push:
    tags:
      - '*.*.*'
      - v*.*.*
      - '*.*.*a*'
      - v*.*.*a*
      - '*.*.*b*'
      - v*.*.*b*
      - '*.*.*rc*'
      - v*.*.*rc*
  workflow_dispatch:

permissions:
  contents: read

jobs:
  quality:
    uses: TurboCoder13/py-lintro/.github/workflows/reusable-quality.yml@ae541c778920330b6e82f3dd536bcf2a026324c0
    permissions:
      contents: read

  build:
    needs: quality
    uses: TurboCoder13/py-lintro/.github/workflows/reusable-build.yml@ae541c778920330b6e82f3dd536bcf2a026324c0
    permissions:
      contents: read

  sbom:
    name: Generate and verify SBOM
    needs: [build, quality]
    uses: TurboCoder13/py-lintro/.github/workflows/reusable-sbom.yml@ae541c778920330b6e82f3dd536bcf2a026324c0
    with:
      bomctl-image: ${{ vars.BOMCTL_IMAGE }}

  publish:
    name: Upload to PyPI
    needs: [build, quality, sbom]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      id-token: write
    timeout-minutes: 20
    environment: pypi
    concurrency:
      group: pypi-tag-publish-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Harden and Checkout
        uses: TurboCoder13/py-lintro/.github/actions/harden-and-checkout@ae541c778920330b6e82f3dd536bcf2a026324c0
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Environment setup
        uses: TurboCoder13/py-lintro/.github/actions/setup-env@ae541c778920330b6e82f3dd536bcf2a026324c0
        with:
          python-version: '3.13'
      - name: Ensure tag points to a commit on main
        run: bash scripts/ci/ensure-tag-on-main.sh

      - name: Verify tag matches pyproject version
        run: scripts/ci/verify-tag-matches-pyproject.sh
        # yamllint enable

      - name: Build sdist and wheel
        run: uv run python -m build

      - name: Twine check
        run: uv run python -m twine check dist/*

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        with:
          skip-existing: true
          verify-metadata: false

      - name: Create GitHub Release
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            dist/*
