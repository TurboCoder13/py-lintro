---
name: CI Pipeline

'on':
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  docker-lintro-analysis:
    name: üõ†Ô∏è Docker Lintro Code Quality & Analysis
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    if: >-
      github.event_name != 'pull_request' ||
      github.event.pull_request.draft == false
    defaults:
      run:
        shell: bash
    permissions:
      contents: write
      pull-requests: write
      # id-token not required
    concurrency:
      group: lintro-ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Environment setup
        uses: ./.github/actions/setup-env

      - name: Setup Docker (Buildx)
        uses: ./.github/actions/setup-docker

      # Removed no-op dependency listing step

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: py-lintro:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Auto-fix with Lintro (same-repo PRs only)
        # yamllint disable rule:line-length
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false && github.event.pull_request.head.repo.fork == false
        # yamllint enable
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          docker run --rm -v "$PWD:/code" -w /code py-lintro:latest lintro format . --output-format grid || true
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "style: auto-format via Lintro"
            git push
            echo "Auto-format changes pushed back to PR branch."
          else
            echo "No changes after formatting."
          fi

      - name: Run Lintro Analysis in Docker
        id: lintro
        run: ./scripts/ci/ci-lintro.sh
        continue-on-error: true

      # Deletion handled by composite action below via marker

      - name: Generate PR Comment
        if: github.event_name == 'pull_request'
        run: ./scripts/ci/ci-pr-comment.sh

      - name: Comment PR with Lintro Results
        if: github.event_name == 'pull_request'
        uses: ./.github/actions/post-pr-comment
        with:
          file: pr-comment.txt
          marker: <!-- lintro-report -->

      - name: Fail on Linting Issues
        if: ${{ env.CHK_EXIT_CODE != '0' }}
        run: |
          echo "‚ùå Linting checks failed"
          echo "Please fix the issues identified by lintro and try again."
          exit 1
