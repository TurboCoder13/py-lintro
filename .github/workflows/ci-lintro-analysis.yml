---
name: Quality Check - CI Pipeline
# Runs lintro quality analysis on PRs and pushes using Docker.
# Builds Docker image, executes lintro checks, and posts PR comments with results.

'on':
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  docker-lintro-analysis:
    name: 🛠️ Docker Lintro Code Quality & Analysis
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    if: >-
      github.event_name != 'pull_request' ||
      github.event.pull_request.draft == false
    defaults:
      run:
        shell: bash
    concurrency:
      group: lintro-ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            codeload.github.com:443
            downloads.github.com:443
            release-assets.githubusercontent.com:443
            objects.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
            docker.io:443
            registry-1.docker.io:443
            auth.docker.io:443
            production.cloudflare.docker.com:443
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          driver: docker
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Environment setup
        uses: TurboCoder13/py-lintro/.github/actions/setup-env@9980358d7a7093996aafb4112bee69b114fdfe40
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BOOTSTRAP_SKIP_SYNC: '1'
          BOOTSTRAP_SKIP_INSTALL_TOOLS: '1'

      # Removed no-op dependency listing step

      - name: Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          push: false
          load: true
          tags: py-lintro:latest
          # Cache disabled for docker driver - not supported
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      - name: Auto-fix with Lintro (same-repo PRs only)
        if: >-
          github.event_name == 'pull_request' &&
          github.event.pull_request.draft == false &&
          github.event.pull_request.head.repo.fork == false
        env:
          HEAD_REF: ${{ github.head_ref }}
        run: scripts/ci/ci-auto-fix.sh

      - name: Run Lintro Analysis in Docker
        id: lintro
        run: ./scripts/ci/ci-lintro.sh
        continue-on-error: true

      # Deletion handled by composite action below via marker

      - name: Generate PR Comment
        if: github.event_name == 'pull_request'
        run: ./scripts/ci/ci-pr-comment.sh

      - name: Comment PR with Lintro Results (merge-update)
        if: github.event_name == 'pull_request'
        uses: TurboCoder13/py-lintro/.github/actions/post-pr-comment@9980358d7a7093996aafb4112bee69b114fdfe40
        with:
          file: pr-comment.txt
          marker: '<!-- lintro-report -->'
          merge-update: 'true'

      - name: Fail on Linting Issues
        if: ${{ env.CHK_EXIT_CODE != '0' }}
        env:
          CHK_EXIT_CODE: ${{ env.CHK_EXIT_CODE }}
        run: scripts/ci/fail-on-lint.sh
