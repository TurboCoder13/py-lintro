# SPDX-License-Identifier: MIT
# For license details, see the repository root LICENSE file.
---
name: SBOM on main

'on':
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: sbom-main-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sbom:
    name: Generate and verify SBOM (main)
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      actions: read
    env:
      BOMCTL_IMAGE: ${{ vars.BOMCTL_IMAGE }}
      XDG_CACHE_HOME: ${{ github.workspace }}/.bomctl-cache
    steps:
      - name: Enforce pinned bomctl image digest
        shell: bash
        run: |
          set -euo pipefail
          ref="${BOMCTL_IMAGE:-}"
          if [[ -z "${ref}" ]]; then
            echo "BOMCTL_IMAGE is not set (vars). Set a digest-pinned image like 'bomctl/bomctl@sha256:...'." >&2
            exit 1
          fi
          if [[ "${ref}" != *@sha256:* ]]; then
            echo "BOMCTL_IMAGE must be digest-pinned (contains '@sha256:'). Got: ${ref}" >&2
            exit 1
          fi
      - name: Harden and Checkout
        uses: TurboCoder13/py-lintro/.github/actions/harden-and-checkout@ae541c778920330b6e82f3dd536bcf2a026324c0
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          egress_policy: block
          allowed-endpoints: |
            github.com:443
            api.github.com:443
            codeload.github.com:443
            downloads.github.com:443
            objects.githubusercontent.com:443
            ghcr.io:443
            production.cloudflare.docker.com:443
            auth.docker.io:443
            registry-1.docker.io:443
            index.docker.io:443
            storage.googleapis.com:443
            sigstore.dev:443
            fulcio.sigstore.dev:443
            rekor.sigstore.dev:443
            tuf-repo-cdn.sigstore.dev:443
      - name: Restore bomctl cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: bomctl-cache-${{ runner.os }}-${{ github.sha }}
      - name: Generate SBOMs (CycloneDX 1.6 JSON & SPDX 2.3)
        run: bash scripts/ci/sbom-generate.sh --use-docker --format cyclonedx-1.6 --format spdx-2.3 --name "py-lintro-sbom" --alias project
      - name: Rename SBOM artifacts with tag/sha for traceability
        run: bash scripts/ci/sbom-rename-artifacts.sh dist/sbom
      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: sbom-artifacts
          path: dist/sbom/*
          if-no-files-found: error
      - name: Verify bomctl image with cosign (keyless)
        run: bash scripts/ci/sbom-verify-container.sh
      - name: Attest SBOM artifacts with keyless cosign (optional)
        run: bash scripts/ci/sbom-attest-artifacts.sh dist/sbom
