---
name: Testing - Built Package Validation
# Tests lintro installed from built distributions (wheel and sdist) rather than
# editable mode. This catches packaging issues like circular imports, missing files,
# and entry point errors that only manifest when installed as a dependency.

'on':
  push:
    branches: [main]
    paths:
      - '**.py'
      - pyproject.toml
      - MANIFEST.in
      - .github/workflows/test-built-package.yml
  pull_request:
    branches: [main]
    paths:
      - '**.py'
      - pyproject.toml
      - MANIFEST.in
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-wheel-install:
    name: Validate wheel installation
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    concurrency:
      group: built-package-wheel-${{ github.ref }}
      cancel-in-progress: true
    defaults:
      run:
        shell: bash
    if: >-
      github.event_name != 'pull_request' ||
      github.event.pull_request.draft == false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            pypi.org:443
            files.pythonhosted.org:443

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Environment setup
        uses: TurboCoder13/py-lintro/.github/actions/setup-env@e0f7754e7bd5205ae3e8794e153b4eb10dba2de1

      - name: Build wheel
        run: uv build --wheel --out-dir dist/

      - name: Create isolated test environment
        run: |
          python -m venv test_venv
          source test_venv/bin/activate
          python -m pip install --upgrade pip
          echo "TEST_VENV_PYTHON=$(pwd)/test_venv/bin/python" >> "$GITHUB_ENV"

      - name: Install wheel in isolated environment
        run: |
          WHEEL_FILE=$(find dist/ -name '*.whl' -type f | head -n 1)
          echo "Installing wheel: ${WHEEL_FILE}"
          "${{ env.TEST_VENV_PYTHON }}" -m pip install "${WHEEL_FILE}"

      - name: Verify package imports
        run: |
          "${{ env.TEST_VENV_PYTHON }}" -c "import lintro; print(f'lintro {lintro.__version__}')"
          "${{ env.TEST_VENV_PYTHON }}" -c "import lintro.parsers"
          "${{ env.TEST_VENV_PYTHON }}" -c "from lintro.parsers import bandit"
          "${{ env.TEST_VENV_PYTHON }}" -c "from lintro.parsers.actionlint.actionlint_parser import parse_actionlint_output"
          "${{ env.TEST_VENV_PYTHON }}" -c "from lintro.tools.implementations.tool_actionlint import ActionlintTool"
          "${{ env.TEST_VENV_PYTHON }}" -c "from lintro.cli import cli"

      - name: Verify CLI entry points
        run: |
          "${{ env.TEST_VENV_PYTHON }}" -m lintro --version
          "${{ env.TEST_VENV_PYTHON }}" -m lintro --help

      - name: Run built package integration test
        run: |
          source test_venv/bin/activate
          pip install pytest assertpy
          pytest tests/integration/test_built_package.py -v

  test-sdist-install:
    name: Validate sdist installation
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    concurrency:
      group: built-package-sdist-${{ github.ref }}
      cancel-in-progress: true
    defaults:
      run:
        shell: bash
    if: >-
      github.event_name != 'pull_request' ||
      github.event.pull_request.draft == false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            pypi.org:443
            files.pythonhosted.org:443

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Environment setup
        uses: TurboCoder13/py-lintro/.github/actions/setup-env@e0f7754e7bd5205ae3e8794e153b4eb10dba2de1

      - name: Build source distribution
        run: uv build --sdist --out-dir dist/

      - name: Create isolated test environment
        run: |
          python -m venv test_venv
          source test_venv/bin/activate
          python -m pip install --upgrade pip
          echo "TEST_VENV_PYTHON=$(pwd)/test_venv/bin/python" >> "$GITHUB_ENV"

      - name: Install sdist in isolated environment
        run: |
          SDIST_FILE=$(find dist/ -name '*.tar.gz' -type f | head -n 1)
          echo "Installing sdist: ${SDIST_FILE}"
          "${{ env.TEST_VENV_PYTHON }}" -m pip install "${SDIST_FILE}"

      - name: Verify package imports from sdist
        run: |
          "${{ env.TEST_VENV_PYTHON }}" -c "import lintro; print(f'lintro {lintro.__version__}')"
          "${{ env.TEST_VENV_PYTHON }}" -c "import lintro.parsers"
          "${{ env.TEST_VENV_PYTHON }}" -c "from lintro.parsers import bandit"
          "${{ env.TEST_VENV_PYTHON }}" -c "from lintro.cli import cli"

      - name: Verify CLI from sdist
        run: |
          "${{ env.TEST_VENV_PYTHON }}" -m lintro --version
          "${{ env.TEST_VENV_PYTHON }}" -m lintro --help
