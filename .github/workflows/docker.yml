name: Docker Build and Test

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'lintro-docker.sh'
      - '.github/workflows/docker.yml'
      - 'requirements.txt'
      - 'requirements-dev.txt'
      - 'lintro/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'lintro-docker.sh'
      - '.github/workflows/docker.yml'
      - 'requirements.txt'
      - 'requirements-dev.txt'
      - 'lintro/**'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        load: true
        tags: lintro:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker image - List tools
      run: |
        docker run --rm lintro:test list-tools
        
    - name: Create test file
      run: |
        echo 'def test_function():
            """This is a test function."""
            print("Hello, world!")
        ' > test_sample.py
        
    - name: Test with specific tools
      run: |
        # Test with the most common tools
        docker run --rm -v $(pwd):/code lintro:test check test_sample.py --tools black,flake8,pylint --table-format
    
    - name: Test with all available tools
      run: |
        # Get list of all available tools
        TOOLS=$(docker run --rm lintro:test list-tools | grep -v "Available tools" | tr -d '[:space:]' | tr '\n' ',')
        echo "Testing with tools: $TOOLS"
        
        # Run lintro with all tools
        # Some tools might not apply to our test file, so we'll allow failures
        docker run --rm -v $(pwd):/code lintro:test check test_sample.py --tools $TOOLS --table-format || echo "Some tools reported issues, which is expected"
    
    - name: Clean up
      run: |
        rm test_sample.py 