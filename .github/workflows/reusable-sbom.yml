# SPDX-License-Identifier: MIT
# For license details, see the repository root LICENSE file.
---
name: Reusable - SBOM Generation & Verification
# Reusable workflow for Software Bill of Materials generation.
# Creates SBOM in multiple formats, verifies with bomctl, and uploads artifacts
# with proper naming for traceability.

'on':
  workflow_call:
    outputs:
      artifact-name:
        description: Name of uploaded SBOM artifact
        value: sbom-artifacts

permissions:
  contents: read
  actions: read

jobs:
  sbom:
    name: Generate and verify SBOM
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    env:
      XDG_CACHE_HOME: ${{ github.workspace }}/.bomctl-cache
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            codeload.github.com:443
            downloads.github.com:443
            release-assets.githubusercontent.com:443
            objects.githubusercontent.com:443
            sigstore.dev:443
            fulcio.sigstore.dev:443
            rekor.sigstore.dev:443
            tuf-repo-cdn.sigstore.dev:443
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: Install bomctl from GitHub Releases (no registries)
        env:
          BOMCTL_VERSION: v0.4.3
        run: bash scripts/ci/sbom-install-binary-gh.sh
      - name: Restore bomctl cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: bomctl-cache-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}-${{ github.sha }}
          restore-keys: |
            bomctl-cache-${{ runner.os }}-
            bomctl-cache-
      - name: Generate SBOM from GitHub Dependency Graph
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash scripts/ci/sbom-fetch-github-api.sh
      - name: Rename SBOM artifacts with tag/sha for traceability
        run: bash scripts/ci/sbom-rename-artifacts.sh dist/sbom
      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        with:
          name: sbom-artifacts
          path: dist/sbom/*
          if-no-files-found: error
      - name: Attest SBOM artifacts with keyless cosign (optional)
        env:
          COSIGN_EXPERIMENTAL: 1
        run: bash scripts/ci/sbom-attest-artifacts.sh dist/sbom
