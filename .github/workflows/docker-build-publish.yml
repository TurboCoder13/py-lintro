---
name: Build - Docker Image & Registry
# Builds and tests Docker image on PR changes. Publishes to GHCR on main branch pushes,
# releases, or manual dispatch. Includes multi-platform support and SBOM generation.

'on':
  push:
    branches: [main]
    paths:
      - Dockerfile
      - docker-compose.yml
      - scripts/docker/docker-lintro.sh
      - scripts/docker/docker-test.sh
      - pyproject.toml
      - lintro/**
  pull_request:
    branches: [main]
    paths:
      - Dockerfile
      - docker-compose.yml
      - scripts/docker/docker-lintro.sh
      - scripts/docker/docker-test.sh
      - pyproject.toml
      - lintro/**
    # Avoid heavy builds for draft PRs
    types: [opened, synchronize, reopened, ready_for_review]
  release:
    types: [published, edited]
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Run publish on this branch (manual testing)'
        required: false
        default: 'false'

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    defaults:
      run:
        shell: bash
    concurrency:
      group: docker-${{ github.ref }}
      cancel-in-progress: true
    if: >-
      github.event_name != 'pull_request' ||
      github.event.pull_request.draft == false
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            codeload.github.com:443
            downloads.github.com:443
            release-assets.githubusercontent.com:443
            objects.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
            docker.io:443
            registry-1.docker.io:443
            auth.docker.io:443
            production.cloudflare.docker.com:443
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          driver: docker
      - name: Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          push: false
          load: true
          tags: py-lintro:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
      - name: Test Docker Image
        run: ./scripts/docker/docker-build-test.sh

      - name: Run pytest suite inside Docker (compose)
        run: ./scripts/docker/docker-test.sh

  publish:
    needs: build-and-test
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    defaults:
      run:
        shell: bash
    if: github.event_name == 'release' || (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && inputs.force_publish == 'true') # yamllint disable-line rule:line-length
    concurrency:
      group: docker-publish-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            codeload.github.com:443
            downloads.github.com:443
            release-assets.githubusercontent.com:443
            objects.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker (Buildx + login)
        uses: TurboCoder13/py-lintro/.github/actions/setup-docker@a43f1e2cedee7c582dd9d0b79387e4d31a2dce5c
        with:
          login: 'true'
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ghcr.io/turbocoder13/py-lintro
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Docker image (with provenance + SBOM)
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true
