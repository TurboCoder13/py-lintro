---
name: Quality Check - PR Title Validation
# Validates PR titles follow Conventional Commits format. Comments with guidance
# and blocks merges if title format is invalid to ensure semantic release compatibility.

'on':
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write

jobs:
  check:
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    concurrency:
      group: semantic-pr-title-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            codeload.github.com:443
            downloads.github.com:443
            objects.githubusercontent.com:443
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate PR title follows Conventional Commits
        id: semantic
        uses: TurboCoder13/py-lintro/.github/actions/semantic-pr-title-check@a43f1e2cedee7c582dd9d0b79387e4d31a2dce5c
        with:
          types: |
            chore
            ci
            docs
            feat
            fix
            perf
            refactor
            revert
            style
            test
          require-scope: 'false'
          comment-on-fail: 'true'

      - name: Fail if invalid
        if: steps.semantic.outputs.ok != 'true'
        env:
          OK: ${{ steps.semantic.outputs.ok }}
        run: scripts/ci/fail-if-semantic-invalid.sh
